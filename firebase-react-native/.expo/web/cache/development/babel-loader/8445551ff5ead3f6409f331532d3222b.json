{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeanm\\\\react-native-firebase\\\\src\\\\screens\\\\RegistrationScreen\\\\RegistrationScreen.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Login');\n  };\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate('Home', {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"Create account\")), React.createElement(View, {\n    style: styles.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Already got an account? \", React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 77\n    }\n  }, \"Log in\")))));\n}","map":{"version":3,"sources":["C:/Users/jeanm/react-native-firebase/src/screens/RegistrationScreen/RegistrationScreen.js"],"names":["React","useState","KeyboardAwareScrollView","styles","firebase","RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function RegistrationScreen({navigation}) {\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const onFooterLinkPress = () => {\r\n        navigation.navigate('Login')\r\n    }\r\n\r\n    const onRegisterPress = () => {\r\n        if (password !== confirmPassword) {\r\n            alert(\"Passwords don't match.\")\r\n            return\r\n        }\r\n    \r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const data = {\r\n                    id: uid,\r\n                    email,\r\n                    fullName,\r\n                };\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .set(data)\r\n                    .then(() => {\r\n                        navigation.navigate('Home', {user: data})\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                alert(error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <KeyboardAwareScrollView\r\n                style={{ flex: 1, width: '100%' }}\r\n                keyboardShouldPersistTaps=\"always\">\r\n                <Image\r\n                    style={styles.logo}\r\n                    source={require('../../../assets/icon.png')}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='Full Name'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setFullName(text)}\r\n                    value={fullName}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='E-mail'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Confirm Password'\r\n                    onChangeText={(text) => setConfirmPassword(text)}\r\n                    value={confirmPassword}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => onRegisterPress()}>\r\n                    <Text style={styles.buttonTitle}>Create account</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>Already got an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Log in</Text></Text>\r\n                </View>\r\n            </KeyboardAwareScrollView>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}