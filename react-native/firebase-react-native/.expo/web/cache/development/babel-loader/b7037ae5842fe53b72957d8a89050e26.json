{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jeanm\\\\Documents\\\\GitHub\\\\react-native-firebase\\\\src\\\\screens\\\\LoginScreen\\\\LoginScreen.js\";\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nimport { firebase } from \"../../firebase/config\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Registration');\n  };\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          alert(\"User does not exist anymore.\");\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        navigation.navigate('Home', {\n          user: user\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onLoginPress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Log in\")), React.createElement(View, {\n    style: styles.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Don't have an account? \", React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 76\n    }\n  }, \"Sign up\")))));\n}","map":{"version":3,"sources":["C:/Users/jeanm/Documents/GitHub/react-native-firebase/src/screens/LoginScreen/LoginScreen.js"],"names":["React","useState","KeyboardAwareScrollView","styles","firebase","LoginScreen","navigation","email","setEmail","password","setPassword","onFooterLinkPress","navigate","onLoginPress","auth","signInWithEmailAndPassword","then","response","uid","user","usersRef","firestore","collection","doc","get","firestoreDocument","exists","alert","data","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\r\nimport styles from './styles';\r\nimport { firebase } from '../../firebase/config'\r\n\r\nexport default function LoginScreen({navigation}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onFooterLinkPress = () => {\r\n        navigation.navigate('Registration')\r\n    }\r\n\r\n    const onLoginPress = () => {\r\n        firebase\r\n            .auth()\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then((response) => {\r\n                const uid = response.user.uid\r\n                const usersRef = firebase.firestore().collection('users')\r\n                usersRef\r\n                    .doc(uid)\r\n                    .get()\r\n                    .then(firestoreDocument => {\r\n                        if (!firestoreDocument.exists) {\r\n                            alert(\"User does not exist anymore.\")\r\n                            return;\r\n                        }\r\n                        const user = firestoreDocument.data()\r\n                        navigation.navigate('Home', {user: user})\r\n                    })\r\n                    .catch(error => {\r\n                        alert(error)\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                alert(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <KeyboardAwareScrollView\r\n                style={{ flex: 1, width: '100%' }}\r\n                keyboardShouldPersistTaps=\"always\">\r\n                <Image\r\n                    style={styles.logo}\r\n                    source={require('../../../assets/icon.png')}\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholder='E-mail'\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    onChangeText={(text) => setEmail(text)}\r\n                    value={email}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={styles.input}\r\n                    placeholderTextColor=\"#aaaaaa\"\r\n                    secureTextEntry\r\n                    placeholder='Password'\r\n                    onChangeText={(text) => setPassword(text)}\r\n                    value={password}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={() => onLoginPress()}>\r\n                    <Text style={styles.buttonTitle}>Log in</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.footerView}>\r\n                    <Text style={styles.footerText}>Don't have an account? <Text onPress={onFooterLinkPress} style={styles.footerLink}>Sign up</Text></Text>\r\n                </View>\r\n            </KeyboardAwareScrollView>\r\n        </View>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}